{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","Components/Section/Section.module.css","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/Section/Section.js","Components/Phonebook.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleInputChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","styles","form","label","input","onChange","type","pattern","title","required","button","Component","ContactList","contacts","onDelete","list","map","id","item","onClick","Filter","Section","children","section","Phonebook","filter","formSubmitHandler","contact","v4","find","toLowerCase","alert","changeFilter","e","deleteContact","contactId","prevState","localStorage","getItem","parseContacts","JSON","parse","prevProps","snapshot","setItem","stringify","filteredContacts","includes","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d6d997b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2IyvC\",\"label\":\"ContactForm_label__2jCbz\",\"input\":\"ContactForm_input__2y7PW\",\"button\":\"ContactForm_button__2vKpH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__jW4_V\",\"item\":\"ContactList_item__32oAH\",\"button\":\"ContactList_button__EZ8fA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2PZ4R\",\"label\":\"Filter_label__3yxus\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3JCYN\"};","import {Component} from \"react\";\r\nimport styles from './ContactForm.module.css'\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    handleInputChange = event => {\r\n        const {name, value} = event.currentTarget\r\n        this.setState({[name] : value})\r\n    }\r\n    handleSubmit = event => {\r\n        event.preventDefault()\r\n        this.props.onSubmit(this.state)\r\n        this.reset()\r\n    }\r\n    reset = () => {\r\n        this.setState({\r\n            name: '',\r\n            number: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {name, number} = this.state;\r\n        return (\r\n\r\n            <form onSubmit={this.handleSubmit} className={styles.form}>\r\n                <label className={styles.label}> Name\r\n                    <input className={styles.input}\r\n                           onChange={this.handleInputChange}\r\n                           value={name}\r\n                           type=\"text\"\r\n                           name=\"name\"\r\n                           pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                           title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                           required\r\n                    />\r\n                </label>\r\n                <label className={styles.label}> Number\r\n                    <input className={styles.input}\r\n                           onChange={this.handleInputChange}\r\n                           value={number}\r\n                           type=\"tel\"\r\n                           name=\"number\"\r\n                           pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                           title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                           required\r\n                    />\r\n                </label>\r\n                <button type=\"Submit\" className={styles.button}>Add</button>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\nexport default ContactForm","import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\nimport styles from './ContactList.module.css'\r\n\r\nconst ContactList = ({contacts, onDelete}) => {\r\n    return (\r\n        <ul className={styles.list}>\r\n            {contacts.map(({id, name, number}) => (\r\n                <li key={id} className={styles.item}>\r\n                    {name} : {number}\r\n                    <button onClick={() => onDelete(id)} type='button' className={styles.button}>Delete</button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired\r\n        })\r\n    ).isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactList","import PropTypes from 'prop-types'\r\nimport styles from './Filter.module.css'\r\n\r\nconst Filter = ({value, onChange}) => (\r\n    <label className={styles.label}>\r\n        <input type='text' value={value} onChange={onChange} className={styles.input}/>\r\n    </label>\r\n)\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Filter","import PropTypes from 'prop-types'\r\nimport styles from './Section.module.css'\r\n\r\nconst Section = ({children}) => (\r\n    <section className={styles.section}> {children}\r\n    </section>\r\n)\r\nSection.propTypes = {children: PropTypes.node,\r\n}\r\n\r\nexport default Section","import {Component} from \"react\";\r\nimport {v4} from 'uuid'\r\nimport ContactForm from './ContactForm/ContactForm'\r\nimport ContactList from './ContactList/ContactList'\r\nimport Filter from './Filter/Filter'\r\nimport Section from './Section/Section'\r\nimport './Phonebook.module.css'\r\n\r\nclass Phonebook extends Component {\r\n    state = {\r\n        contacts: [\r\n            {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n            {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n            {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n            {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n        ],\r\n        filter: '',\r\n    }\r\n    formSubmitHandler = ({name, number}) => {\r\n        const contact = {\r\n            id: v4(),\r\n            name,\r\n            number,\r\n        }\r\n\r\n        const {contacts} = this.state\r\n\r\n        if (\r\n            contacts.find(\r\n                ({name}) => name.toLowerCase() === contact.name.toLowerCase()\r\n            )\r\n        ) {\r\n            alert(`${name} is already in contacts`)\r\n        } else {\r\n            this.setState(({contacts}) => ({\r\n                contacts: [contact, ...contacts]\r\n            }))\r\n        }\r\n    }\r\n    changeFilter = e => {\r\n        this.setState({\r\n            filter: e.currentTarget.value\r\n        })\r\n    }\r\n    deleteContact = contactId => {\r\n        this.setState(prevState => ({\r\n            contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n        }))\r\n    }\r\n    componentDidMount() {\r\n        const contacts = localStorage.getItem('contacts')\r\n        const parseContacts = JSON.parse(contacts)\r\n\r\n        if (parseContacts) {\r\n            this.setState({contacts: parseContacts})\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.state.contacts !== prevState.contacts) {\r\n            localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const {contacts, filter} = this.state\r\n        const filteredContacts = contacts.filter((contact) =>\r\n        contact.name.toLowerCase().includes(filter.toLowerCase())\r\n        )\r\n        return (\r\n            <Section>\r\n                <h1>Phonebook</h1>\r\n                <ContactForm onSubmit = {this.formSubmitHandler} />\r\n\r\n                <h2>Contacts</h2>\r\n                <h2>Find contacts by name</h2>\r\n\r\n                <Filter value={filter} onChange={this.changeFilter} />\r\n\r\n                <ContactList onDelete={this.deleteContact} contacts={filteredContacts} />\r\n            </Section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Phonebook","import './App.css';\nimport Phonebook from \"./Components/Phonebook\";\n\nconst App = () => {\n  return <Phonebook />\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}